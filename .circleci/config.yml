version: 2.1

workflows:
  build-deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/

      - deploy:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /Release-.*/
          context:
            - CLOJARS_DEPLOY

jobs:
  build:
    machine:
      image: ubuntu-2004:2023.07.1

    resource_class: medium

    working_directory: ~/repo

    environment:
      LEIN_ROOT: "true"
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "project.clj" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Setup environment
          command: sudo apt-get update && sudo apt-get install -y openjdk-8-jdk leiningen

      - run:
          name: Fetch project dependencies
          command: lein deps

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "project.clj" }}

      - run:
          name: Setup tests
          command: |
             [[ -f ~/.ssh/id_rsa ]] || ssh-keygen -N "" -f ~/.ssh/id_rsa
             cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
             ssh-keygen -f ~/.ssh/clj_ssh -t rsa -C "key for test clj-ssh" -N ""
             ssh-keygen -f ~/.ssh/clj_ssh_pp -t rsa -C "key for test clj-ssh" -N "clj-ssh"
             echo "from=\"127.0.0.1,localhost,0.0.0.0\" $(cat ~/.ssh/clj_ssh.pub)" >> ~/.ssh/authorized_keys
             echo "from=\"127.0.0.1,localhost,0.0.0.0\" $(cat ~/.ssh/clj_ssh_pp.pub)" >> ~/.ssh/authorized_keys
             eval $(ssh-agent)
             cat \<< EOF > pp
             #!/bin/sh
             echo "clj-ssh"
             EOF
             chmod +x pp
             export SSH_ASKPASS=./pp
             export DISPLAY=1
             setsid ssh-add ~/.ssh/clj_ssh_pp < /dev/null >/dev/null 2>&1

      - run:
          name: Run tests
          command: lein test

  deploy:
    machine:
      image: ubuntu-2004:2023.07.1

    resource_class: medium

    working_directory: ~/repo

    environment:
      LEIN_ROOT: "true"
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m

    steps:
      - checkout

      - run:
          name: Setup environment
          command: sudo apt-get update && sudo apt-get install -y openjdk-8-jdk leiningen

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "project.clj" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "project.clj" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
         name: Install babashka
         command: |
           curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install -o install.sh
           sudo bash install.sh
           rm install.sh
      - run:
          name: Install deployment-script
          command: |
            curl -s https://raw.githubusercontent.com/clj-commons/infra/main/deployment/circle-maybe-deploy.bb -o circle-maybe-deploy.bb
            chmod a+x circle-maybe-deploy.bb

      - run: lein deps

      - run:
          name: Setup GPG signing key
          command: |
            sudo apt-get update
            sudo apt-get install -y make gnupg
            GNUPGHOME="$HOME/.gnupg"
            export GNUPGHOME
            mkdir -p "$GNUPGHOME"
            chmod 0700 "$GNUPGHOME"

              echo "$GPG_KEY" \
               | base64 --decode --ignore-garbage \
               | gpg --batch --allow-secret-key-import --import

               gpg --keyid-format LONG --list-secret-keys

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "project.clj" }}
      - run:
         name: Deploy
         command: |
           GPG_TTY=$(tty)
           export GPG_TTY
           echo $GPG_TTY
           ./circle-maybe-deploy.bb lein deploy clojars
          
